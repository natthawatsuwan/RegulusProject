events {
	worker_connections 1024;
}

http {
	proxy_buffer_size 128k;
	proxy_buffers 4 256k;
	proxy_busy_buffers_size 256k;
	large_client_header_buffers 4 16k;
	client_max_body_size 100M;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;
	error_log /var/log/nginx/error.log;

	upstream backend {
        server regulus-application-core:8080;
    }
	# upstream frontend {
    #     server regulus-client-app:8888;
	# }

	server {
		listen 8081 default;
		server_name dev.reguluscloud.com;
		# location / {
		# 	proxy_pass http://frontend;
		# }	

        location /api/ {
			proxy_pass http://backend;
			proxy_connect_timeout 60s;
            proxy_read_timeout 5400s;
            proxy_send_timeout 5400s;
			# if ($request_method = 'OPTIONS') {
        	# 	add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        	# 	add_header 'Access-Control-Allow-Credentials' 'true' always;
        	# 	add_header 'Access-Control-Allow-Headers' "Origin, X-Requested-With, Content-Type, Accept" always;
        	# 	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        	# 	add_header 'Access-Control-Max-Age' 1728000;
        	# 	add_header 'Content-Type' 'text/plain; charset=utf-8';
        	# 	add_header 'Content-Length' 0;
        	# 	return 204;
     		# }
     		proxy_set_header        Host $server_name;
     		proxy_set_header        X-Real-IP $remote_addr;
     		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
     		proxy_set_header        X-Forwarded-Proto $scheme;
     		# proxy_read_timeout 300; # Reducing this
     		# proxy_connect_timeout 300;  # Adding this
     		proxy_request_buffering off;
     		proxy_buffering off;
     		proxy_redirect off;
        }

		location /seq/ {
			rewrite ^/seq/(.*) /$1 break;  # Rewrite the URL to remove /seq
            proxy_pass http://seq:80;  # Forward requests to the Seq container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		location /hangfire {
            proxy_pass http://backend;  # Forward requests to the Seq container
			auth_basic off;
			proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
 }
}
